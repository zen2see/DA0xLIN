/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DA0Facet, DA0FacetInterface } from "../DA0Facet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "addApprovedContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "approvedContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "contracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "removeApprovedContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611368806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610257578063a9059cbb1461026a578063dce860031461027d578063dd62ed3e1461029257600080fd5b806370a08231146101fb578063755edd171461023157806395d89b41146101055780639eea22791461024457600080fd5b806318160ddd116100d357806318160ddd1461018d57806323b872dd146101c6578063313ce567146101d957806339509351146101e857600080fd5b806306fdde0314610105578063095ea7b31461014d5780631249c58b14610170578063135171be1461017a575b600080fd5b604080518082018252600381527f44413000000000000000000000000000000000000000000000000000000000006020820152905161014491906110be565b60405180910390f35b61016061015b36600461115a565b6102d6565b6040519015158152602001610144565b61017861034d565b005b610178610188366004611184565b610453565b6103ec547401000000000000000000000000000000000000000090046bffffffffffffffffffffffff165b604051908152602001610144565b6101606101d43660046111a6565b610594565b60405160128152602001610144565b6101606101f636600461115a565b610847565b6101b8610209366004611184565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b61017861023f366004611184565b610976565b610178610252366004611184565b610a93565b61016061026536600461115a565b610caf565b61016061027836600461115a565b610deb565b610285610efe565b60405161014491906111e2565b6101b86102a036600461123c565b73ffffffffffffffffffffffffffffffffffffffff91821660009081526020818152604080832093909416825291909152205490565b3360008181526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061033c9086815260200190565b60405180910390a350600192915050565b33600090815260016020526040812080546a084595161401484a0000009283929161037990849061129e565b90915550506103ec80548291906014906103ba9084907401000000000000000000000000000000000000000090046bffffffffffffffffffffffff166112b6565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161044891815260200190565b60405180910390a350565b61045b610f70565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090205415610513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f44413046616365743a20417070726f76656420636f6e747261637420616c726560448201527f616479206578697374730000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600280546001810182557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01805473ffffffffffffffffffffffffffffffffffffffff9093167fffffffffffffffffffffffff0000000000000000000000000000000000000000909316831790555460009182526003602052604090912055565b73ffffffffffffffffffffffffffffffffffffffff831660008181526001602052604081205490913314806105d757503360009081526003602052604090205415155b6107175773ffffffffffffffffffffffffffffffffffffffff851660009081526020818152604080832033845290915290205483811015610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4441303a204e6f7420616c6c6f77656420746f207472616e7366657200000000604482015260640161050a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610715576106a584826112e6565b73ffffffffffffffffffffffffffffffffffffffff8716600081815260208181526040808320338085529252909120929092557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561070387856112e6565b60405190815260200160405180910390a35b505b82811015610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4441303a204e6f7420656e6f7567682044413020746f207472616e7366657200604482015260640161050a565b61078b83826112e6565b73ffffffffffffffffffffffffffffffffffffffff80871660009081526001602052604080822093909355908616815290812080548592906107ce90849061129e565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161083491815260200190565b60405180910390a3506001949350505050565b3360009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205481610881848361129e565b905081811015610913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f44413046616365743a20416c6c6f77616e636520696e637265617365206f766560448201527f72666c6f77656400000000000000000000000000000000000000000000000000606482015260840161050a565b3360008181526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8a1680855290835292819020859055518481529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259101610834565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020526040812080546a084595161401484a000000928392916109b890849061129e565b90915550506103ec80548291906014906109f99084907401000000000000000000000000000000000000000090046bffffffffffffffffffffffff166112b6565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a8791815260200190565b60405180910390a35050565b610a9b610f70565b73ffffffffffffffffffffffffffffffffffffffff811660009081526003602052604090205480610b4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f44413046616365743a20417070726f76656420636f6e747261637420646f657360448201527f206e6f7420657869737400000000000000000000000000000000000000000000606482015260840161050a565b600254818114610c195760006002610b676001846112e6565b81548110610b7757610b776112fd565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169050806002610ba96001866112e6565b81548110610bb957610bb96112fd565b600091825260208083209190910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9485161790559290911681526003909152604090208290555b6002805480610c2a57610c2a61132c565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590920190925573ffffffffffffffffffffffffffffffffffffffff949094168152600390935250506040812055565b3360009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205482811015610d6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f44413046616365743a20416c6c6f77616e63652064656372656173656420626560448201527f6c6f772030000000000000000000000000000000000000000000000000000000606482015260840161050a565b610d7883826112e6565b3360008181526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8a16808552908352928190208590555184815293945090927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35060019392505050565b3360009081526001602052604081205482811015610e65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4441303a204e6f7420656e6f7567682044413020746f207472616e7366657200604482015260640161050a565b610e6f83826112e6565b336000908152600160205260408082209290925573ffffffffffffffffffffffffffffffffffffffff861681529081208054859290610eaf90849061129e565b909155505060405183815273ffffffffffffffffffffffffffffffffffffffff85169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610dd9565b60606000600201805480602002602001604051908101604052809291908181526020018280548015610f6657602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610f3b575b5050505050905090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16610fb0611055565b73ffffffffffffffffffffffffffffffffffffffff1614611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201527f6572000000000000000000000000000000000000000000000000000000000000606482015260840161050a565b565b60003033036110b857600080368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505036015173ffffffffffffffffffffffffffffffffffffffff1691506110bb9050565b50335b90565b600060208083528351808285015260005b818110156110eb578581018301518582016040015282016110cf565b818111156110fd576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461115557600080fd5b919050565b6000806040838503121561116d57600080fd5b61117683611131565b946020939093013593505050565b60006020828403121561119657600080fd5b61119f82611131565b9392505050565b6000806000606084860312156111bb57600080fd5b6111c484611131565b92506111d260208501611131565b9150604084013590509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561123057835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016111fe565b50909695505050505050565b6000806040838503121561124f57600080fd5b61125883611131565b915061126660208401611131565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156112b1576112b161126f565b500190565b60006bffffffffffffffffffffffff8083168185168083038211156112dd576112dd61126f565b01949350505050565b6000828210156112f8576112f861126f565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c634300080d000a";

export class DA0Facet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DA0Facet> {
    return super.deploy(overrides || {}) as Promise<DA0Facet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DA0Facet {
    return super.attach(address) as DA0Facet;
  }
  connect(signer: Signer): DA0Facet__factory {
    return super.connect(signer) as DA0Facet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DA0FacetInterface {
    return new utils.Interface(_abi) as DA0FacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DA0Facet {
    return new Contract(address, _abi, signerOrProvider) as DA0Facet;
  }
}
